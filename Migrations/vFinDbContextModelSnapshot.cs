// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vfinance_api.DataManager;

namespace vfinance_api.Migrations
{
    [DbContext(typeof(vFinDbContext))]
    partial class vFinDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("vfinance_api.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<string>("UserCode")
                        .HasColumnType("varchar(95)");

                    b.HasKey("Id")
                        .HasName("PK_AppUserId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("Idx_Email");

                    b.HasIndex("UserCode")
                        .IsUnique()
                        .HasDatabaseName("Idx_AppUserId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("vfinance_api.Models.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("FilePath")
                        .HasColumnType("varchar(95)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id")
                        .HasName("PK_AttachmentId");

                    b.HasIndex("ExpenseId");

                    b.HasIndex("FileName")
                        .IsUnique()
                        .HasDatabaseName("Idx_FileName");

                    b.HasIndex("FilePath")
                        .IsUnique()
                        .HasDatabaseName("Idx_FilePath");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("vfinance_api.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Category")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id")
                        .HasName("PK_ExpenseId");

                    b.HasIndex("Amount")
                        .IsUnique()
                        .HasDatabaseName("Idx_Amount");

                    b.HasIndex("Category")
                        .IsUnique()
                        .HasDatabaseName("Idx_Category");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("vfinance_api.Models.Attachment", b =>
                {
                    b.HasOne("vfinance_api.Models.Expense", null)
                        .WithMany("Attachments")
                        .HasForeignKey("ExpenseId");
                });

            modelBuilder.Entity("vfinance_api.Models.Expense", b =>
                {
                    b.Navigation("Attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
